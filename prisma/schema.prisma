// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Tweet {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  content   String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  comment   Comment[]
  likes     Like[]
}

model Comment {
  id      String @id @default(cuid())
  content String
  userId  String
  tweetId String
  user    User   @relation(fields: [userId], references: [id])
  tweet   Tweet  @relation(fields: [tweetId], references: [id])
  likes   Like[]
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  tweetId   String?
  commentId String?
  user      User     @relation(fields: [userId], references: [id])
  tweet     Tweet?   @relation(fields: [tweetId], references: [id])
  comment   Comment? @relation(fields: [commentId], references: [id])

  @@unique([userId, tweetId, commentId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  tweet         Tweet[]
  comment       Comment[]
  likes         Like[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
